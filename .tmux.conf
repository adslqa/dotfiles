# First remove *all* keybindings
unbind-key -a

# Now reinsert all the regular tmux keys
bind-key    C-Space send-prefix
bind-key        C-l send-keys -R ; clear-history ; send-keys C-l
bind-key        C-o rotate-window
bind-key        C-z suspend-client
bind-key      Space next-layout
bind-key          ! break-pane
bind-key          " split-window
bind-key          # list-buffers
bind-key          $ command-prompt -I #S "rename-session '%%'"
bind-key          % split-window -h
bind-key          & confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key          ' command-prompt -p index "select-window -t ':%%'"
bind-key          ( switch-client -p
bind-key          ) switch-client -n
bind-key -r       + resize-pane -U 1
bind-key          , command-prompt -I #W "rename-window '%%'"
bind-key -r       - resize-pane -D 1
bind-key          . command-prompt "move-window -t '%%'"
bind-key          0 select-window -t :0
bind-key          1 select-window -t :1
bind-key          2 select-window -t :2
bind-key          3 select-window -t :3
bind-key          4 select-window -t :4
bind-key          5 select-window -t :5
bind-key          6 select-window -t :6
bind-key          7 select-window -t :7
bind-key          8 select-window -t :8
bind-key          9 select-window -t :9
bind-key          : command-prompt
bind-key          ; last-pane
bind-key -r       < resize-pane -L 1
bind-key          = choose-buffer
bind-key -r       > resize-pane -R 1
bind-key          ? list-keys
bind-key          C command-prompt -p "Name of new window: " "new-window -n '%%'"
bind-key          D choose-client
bind-key          L switch-client -l
bind-key          [ copy-mode
bind-key          ] paste-buffer
bind-key -r       b previous-window
bind-key          c new-window
bind-key          d detach-client
bind-key          f command-prompt "find-window '%%'"
bind-key          h select-pane -L
bind-key          i display-message
bind-key          j select-pane -D
bind-key          k select-pane -U
bind-key          l select-pane -R
bind-key -r       n next-window
bind-key          o select-pane -t :.+
bind-key          p previous-window
bind-key          q display-panes
bind-key          r source-file /home/rmelton/.tmux.conf ; display-message "Config reloaded..."
bind-key          s choose-tree
bind-key          t clock-mode
bind-key          w select-pane -t :.+
bind-key          x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key          z resize-pane -Z
bind-key          { swap-pane -U
bind-key          } swap-pane -D
bind-key          ~ show-messages
bind-key      PPage copy-mode -u
bind-key -r      Up select-pane -U
bind-key -r    Down select-pane -D
bind-key -r    Left select-pane -L
bind-key -r   Right select-pane -R
bind-key        M-1 select-layout even-horizontal
bind-key        M-2 select-layout even-vertical
bind-key        M-3 select-layout main-horizontal
bind-key        M-4 select-layout main-vertical
bind-key        M-5 select-layout tiled
bind-key        M-n next-window -a
bind-key        M-o rotate-window -D
bind-key        M-p previous-window -a
bind-key -r    M-Up resize-pane -U 5
bind-key -r  M-Down resize-pane -D 5
bind-key -r  M-Left resize-pane -L 5
bind-key -r M-Right resize-pane -R 5
bind-key -r    C-Up resize-pane -U
bind-key -r  C-Down resize-pane -D
bind-key -r  C-Left resize-pane -L
bind-key -r C-Right resize-pane -R

# my bindings
set -g base-index 1
set -g status-bg white
set -g status-fg black
set -sg escape-time 0
set -g default-terminal "screen-256color"
set -g xterm-keys on
set-window-option -g automatic-rename
set-window-option -g window-status-current-bg cyan
set-option -g pane-border-fg white
set-option -g pane-active-border-fg cyan

unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# Some nice binds
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

bind C-l send-key -R \; clear-history \; send-key C-l

# history limit
set -g history-limit 10000

# vi key bindings
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy V rectangle-toggle
bind -t vi-copy Escape cancel

# vi like key bindings
bind -r < resize-pane -L 1
bind -r - resize-pane -D 1
bind -r + resize-pane -U 1
bind -r > resize-pane -R 1

# allow repeat in window changing
bind-key -r n next-window
bind-key -r b previous-window

# mousemode
setw -g mode-mouse on
setw -g mouse-resize-pane on
setw -g mouse-select-pane on
setw -g mouse-select-window on

# activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# utf8
setw -g utf8 on
set-option -g status-utf8 on

# better resize
setw -g aggressive-resize on

# Renumber those windows
set-option -g renumber-windows on

# Put them on top
set-option -g status-position top

# Make it more like my vim binding
unbind w
bind w select-pane -t :.+

# clock
set-window-option -g clock-mode-colour cyan

# faster repeat
set -s escape-time 0
set -g status-left '#[fg=blue] #S'

# Smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
