# remove all
unbind -a

# put back defaults
bind C-b send-prefix
bind C-o rotate-window
bind C-z suspend-client
bind Space next-layout
bind ! break-pane
bind '"' split-window
bind '#' list-buffers
bind '$' command-prompt -I "#S" "rename-session '%%'"
bind % split-window -h
bind & confirm-before -p "kill-window #W? (y/n)" kill-window
bind "'" command-prompt -p index "select-window -t ':%%'"
bind ( switch-client -p
bind ) switch-client -n
bind , command-prompt -I "#W" "rename-window '%%'"
bind - delete-buffer
bind . command-prompt "move-window -t '%%'"
bind 0 select-window -t :0
bind 1 select-window -t :1
bind 2 select-window -t :2
bind 3 select-window -t :3
bind 4 select-window -t :4
bind 5 select-window -t :5
bind 6 select-window -t :6
bind 7 select-window -t :7
bind 8 select-window -t :8
bind 9 select-window -t :9
bind : command-prompt
bind \; last-pane
bind = choose-buffer
bind ? list-keys
bind D choose-client
bind L switch-client -l
bind [ copy-mode
bind ] paste-buffer
bind c new-window
bind d detach-client
bind f command-prompt "find-window '%%'"
bind i display-message
bind l last-window
bind n next-window
bind o select-pane -t :.+
bind p previous-window
bind q display-panes
bind r refresh-client
bind s choose-tree
bind t clock-mode
bind w choose-window
bind x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind z resize-pane -Z
bind { swap-pane -U
bind } swap-pane -D
bind '~' show-messages
bind PPage copy-mode -u
bind -r Up select-pane -U
bind -r Down select-pane -D
bind -r Left select-pane -L
bind -r Right select-pane -R
bind M-1 select-layout even-horizontal
bind M-2 select-layout even-vertical
bind M-3 select-layout main-horizontal
bind M-4 select-layout main-vertical
bind M-5 select-layout tiled
bind M-n next-window -a
bind M-o rotate-window -D
bind M-p previous-window -a
bind -r M-Up resize-pane -U 5
bind -r M-Down resize-pane -D 5
bind -r M-Left resize-pane -L 5
bind -r M-Right resize-pane -R 5
bind -r C-Up resize-pane -U
bind -r C-Down resize-pane -D
bind -r C-Left resize-pane -L
bind -r C-Right resize-pane -R

# my settings
set -g base-index 1
set -g status-bg white
set -g status-fg black
set -sg escape-time 0
set -g default-terminal "screen-256color"
set -g xterm-keys on
setw -g automatic-rename
setw -g window-status-current-bg cyan
set -g pane-border-fg white
set -g pane-active-border-fg cyan

unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Some nice binds
bind C command-prompt -p "Name of new window: " "new-window -n '%%'"
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

bind C-l send-key -R \; clear-history \; send-key C-l

# history limit
set -g history-limit 10000

# vi key bindings
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy V rectangle-toggle
bind -t vi-copy Escape cancel

# vi like key bindings
bind -r < resize-pane -L 1
bind -r - resize-pane -D 1
bind -r + resize-pane -U 1
bind -r > resize-pane -R 1

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -r -n S-Left  previous-window
bind -r -n S-Right next-window

# allow repeat in window changing
bind -r n next-window
bind -r b previous-window

# same directory
unbind c; bind c new-window -c "#{pane_current_path}"

# mousemode
if-shell "[[ `tmux -V` == *2.0 ]]" 'setw -g mode-mouse on; setw -g mouse-resize-pane on; setw -g mouse-select-pane on; setw -g mouse-select-window on' 'set -g mouse on'

# activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# utf8
setw -g utf8 on
set -g status-utf8 on

# better resize
setw -g aggressive-resize on

# Renumber those windows
set -g renumber-windows on

# Put them on top
set -g status-position top

# Make it more like my vim binding
unbind w
bind w select-pane -t :.+

# clock
setw -g clock-mode-colour cyan

# faster repeat
set -s escape-time 0
set -g status-left '#[fg=blue] #S '

# Smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
