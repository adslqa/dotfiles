hook global InsertCompletionHide .* %{
	unmap window insert <tab> <c-n>
	unmap window insert <backtab> <c-p>
}
hook global InsertCompletionShow .* %{
	map window insert <tab> <c-n>
	map window insert <backtab> <c-p>
}
hook global WinCreate .* %{
	add-highlighter number_lines -hlcursor
	add-highlighter show_matching
	# default space char doesn't show 
	add-highlighter show_whitespaces -spc ∙ -nbsp ∙
	add-highlighter wrap -word
	add-highlighter regex TODO|FIXME|XXX 0:green
}
hook global WinSetOption filetype=go %{
	go-enable-autocomplete
	set window indentwidth 0 # 0 means real tab
	set window formatcmd 'goimports'
	set window lintcmd 'gometalinter .'
	set window makecmd 'go install -v -u .'
	map window normal G :go-jump<ret>
}

set global ui_options ncurses_assistant=none
set global indentwidth 4
set global scrolloff 5,5

def find -params 1 -shell-candidates %{ find . -type f } %{ edit %arg{1} } -docstring "Uses find to well, find files"
def git-edit -params 1 -shell-candidates %{ git ls-files } %{ edit %arg{1} } -docstring "Uses git ls-files to find files"
def qa q -docstring "stop using this (muscle memory too strong)"

alias global ge git-edit
alias global f find
alias global bd delete-buffer

map global user c %{: comment-line<ret>} -docstring "Comment or uncomment selected lines"
map global user t %{|nc termbin.com 9999<ret>xyuP<a-;>k,c} -docstring "Publish to termbin.com"
map global normal -- - %{:find <tab>}

colorscheme nofrils-acme
try %{ source .kakrc.local }
